#!/usr/bin/env python

from __future__ import print_function
from optparse import OptionParser
import os
import os.path
import re
import sys
import gk
from gk import rc
from gk import common

# currently has one option:
#   -kfn, --key-file-name        adds the keyfilename as a second argument

optparser = OptionParser(usage="ssh-authkeys -f|--key-file-name")
optparser.add_option("-f", "--key-file-name", action="store_true", dest="kfn", help="user's SSH key FILE", metavar="FILE")
opt, args = optparser.parse_args(sys.argv)
#if args:
#    optparser.print_usage()
#    gk.error("Unexpected options: %s", repr(args))

common.tsh.test("sestatus")
selinux = re.search(r"enabled", common.tsh.output)

ab = rc.rc["GK_ADMIN_BASE"]

if not os.path.isdir(ab + "/keydir"):
    gk.bye("'keydir' not found in '%s'", ab)

akdir        = os.environ["HOME"] + "/.ssh"
akfile       = os.environ["HOME"] + "/.ssh/authorized_keys"
gkshell      = rc.rc["GK_BASE"] + "/gitkeeper-shell"

# ----------------------------------------------------------------------

def sanity():
    if not os.access(gkshell, os.F_OK):
        gk.bye("'%s' not found, this should NOT happen..." % gkshell)
    if not os.access(gkshell, os.R_OK):
        gk.bye("'%s' found but not readable, this should NOT happen..." % gkshell)
    if not os.access(gkshell, os.X_OK):
        gk.bye("'%s' found but not executable, this should NOT happen..." % gkshell)

    if not os.path.isdir(akdir):
        gk.warning("'%s' missing, creating a new one", akdir)
        common.mkdir(akdir, 0700)

    if not os.access(akfile, os.F_OK):
        gk.warning("'%s' missing; creating a new one", akfile)
        common.put(akfile, "")
        os.chmod(akfile, 0700)

def auth_options():
    if "AUTH_OPTIONS" in rc.rc:
        auth_options = rc.rc["AUTH_OPTIONS"]
    else:
        auth_options = "no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty"

    return auth_options


def optionise(f):
    user = f
    user = re.sub(".*/", "", user)              # foo/bar/baz.pub -> baz.pub
    user = re.sub("(@[^.]+)?\.pub$", "", user)  # baz.pub, baz@home.pub -> baz

    text = common.tsh.run("cat %s" % f)
    if common.tsh.lines() != 1:
        gk.warning("'%s' does not contain exactly 1 line, ignoring" % f)
        return None

    return "command=\"%s %s%s\"" % (gkshell, user, (" %s" % f) if opt.kfn else "") + ",%s %s" % (auth_options(), text)

sanity()
common.chdir(ab)

pubkeys = common.tsh.run('find keydir/ -type f -name "*.pub"')
pattern = re.compile(r"# gitkeeper start\s.*^# gitkeeper end\s?", re.MULTILINE | re.DOTALL)
oldkeys = pattern.sub("", common.cat(akfile))

keys = "# gitkeeper start\n"

for f in sorted(pubkeys.split()):
    t = optionise(f)
    if t:
        keys += t + "\n"

keys += "# gitkeeper end\n"
keys += oldkeys
common.put(akfile, keys)
